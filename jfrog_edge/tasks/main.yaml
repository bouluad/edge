---
- name: Create Artifactory user and group
  ansible.builtin.group:
    name: "{{ jfrog_group }}"
    state: present

- name: Create Artifactory group
  ansible.builtin.user:
    name: "{{ jfrog_user }}"
    group: "{{ jfrog_group }}"
    shell: /bin/bash
    create_home: no

- name: Create installation and data directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ jfrog_user }}"
    group: "{{ jfrog_group }}"
    mode: "0755"
  loop:
    - "{{ jfrog_install_dir }}"
    - "{{ jfrog_data_dir }}"

- name: Download Artifactory
  ansible.builtin.get_url:
    url: "{{ jfrog_download_url }}"
    dest: "/tmp/artifactory.tar.gz"
    mode: "0644"

- name: Extract Artifactory
  ansible.builtin.unarchive:
    src: "/tmp/artifactory.tar.gz"
    dest: "{{ jfrog_install_dir }}"
    remote_src: yes
    owner: "{{ jfrog_user }}"
    group: "{{ jfrog_group }}"

- name: Configure systemd service
  ansible.builtin.template:
    src: "artifactory.service.j2"
    dest: "/etc/systemd/system/{{ jfrog_service_name }}.service"
    owner: root
    group: root
    mode: "0644"

- name: Reload systemd daemon
  ansible.builtin.systemd:
    daemon_reload: true

- name: Enable and start Artifactory service
  ansible.builtin.systemd:
    name: "{{ jfrog_service_name }}"
    state: started
    enabled: true

- name: Configure Edge node
  ansible.builtin.uri:
    url: "http://localhost:{{ jfrog_port }}/artifactory/api/system/configuration"
    method: POST
    body: |
      {
        "edge": {
          "url": "{{ central_artifactory_url }}",
          "apiKey": "{{ central_artifactory_api_key }}"
        }
      }
    status_code: 200
    headers:
      Content-Type: "application/json"
    body_format: json
